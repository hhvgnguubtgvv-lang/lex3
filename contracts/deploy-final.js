const { ethers } = require('ethers');
require('dotenv').config(); // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ç—É —Å—Ç—Ä–æ–∫—É!

async function main() {
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ - —Ç–µ–ø–µ—Ä—å —á–∏—Ç–∞–µ–º –∏–∑ process.env
  const RPC_URL = process.env.MUMBAI_RPC_URL || 'https://polygon-mumbai-bor.publicnode.com';
  const PRIVATE_KEY = process.env.PRIVATE_KEY;
  const PAYMENT_TOKEN = process.env.PAYMENT_TOKEN_ADDRESS;

  console.log('PRIVATE_KEY from env:', PRIVATE_KEY ? '***' + PRIVATE_KEY.slice(-6) : 'Not set');
  console.log('PAYMENT_TOKEN from env:', PAYMENT_TOKEN || 'Not set');

  if (!PRIVATE_KEY) {
    console.error('‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ PRIVATE_KEY –≤ .env —Ñ–∞–π–ª–µ');
    console.log('–¢–µ–∫—É—â–∏–π .env —Ñ–∞–π–ª:');
    const fs = require('fs');
    if (fs.existsSync('.env')) {
      console.log(fs.readFileSync('.env', 'utf8'));
    }
    process.exit(1);
  }

  const provider = new ethers.JsonRpcProvider(RPC_URL);
  const wallet = new ethers.Wallet(PRIVATE_KEY, provider);
  
  console.log('üëõ –î–µ–ø–ª–æ–π –æ—Ç:', wallet.address);
  
  const balance = await provider.getBalance(wallet.address);
  console.log('üí∞ –ë–∞–ª–∞–Ω—Å:', ethers.formatEther(balance), 'MATIC');
  
  if (balance === 0n) {
    console.log('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ MATIC –¥–ª—è –≥–∞–∑–∞. –ü–æ–ª—É—á–∏—Ç–µ test MATIC:');
    console.log('https://faucet.polygon.technology/');
    process.exit(1);
  }

  // –û—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –¥–µ–ø–ª–æ—è...
  console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–ø–ª–æ–π...');
}

main().catch(console.error);
