const { ethers } = require('ethers');
require('dotenv').config();

async function main() {
  // –õ–æ–∫–∞–ª—å–Ω–∞—è —Å–µ—Ç—å Hardhat
  const RPC_URL = 'http://localhost:8545';
  const PRIVATE_KEY = '0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80'; // Account #0
  const PAYMENT_TOKEN = process.env.PAYMENT_TOKEN_ADDRESS || '0x5FbDB2315678afecb367f032d93F642f64180aa3';

  const provider = new ethers.JsonRpcProvider(RPC_URL);
  const wallet = new ethers.Wallet(PRIVATE_KEY, provider);
  
  console.log('üëõ –î–µ–ø–ª–æ–π –æ—Ç:', wallet.address);
  console.log('üí∞ –ë–∞–ª–∞–Ω—Å:', ethers.formatEther(await provider.getBalance(wallet.address)), 'ETH');

  // Factory –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ Marketplace
  const factory = new ethers.ContractFactory(
    [
      "constructor(address _paymentToken)",
      "function listNFT(address nftContract, uint256 tokenId, uint256 price) external",
      "function buyNFT(uint256 listingId) external",
      "function transferNFTToMarketplace(address nftContract, uint256 tokenId) external"
    ],
    "0x608060405234801561001057600080fd5b50604051610f88380380610f88833981810160405281019061003291906100b4565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100e1565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a182610076565b9050919050565b6100b181610096565b81146100bc57600080fd5b50565b6000602082840312156100d4576100d3610071565b5b60006100e2848285016100a8565b91505092915050565b610e98806100f06000396000f3fe6080604052600436106100435760003560e01c80632f6c6e021461004f5780634e17a5c61461006b578063b6a5d7c614610096578063f2c098f7146100bf5761004a565b3661004a57005b600080fd5b610069600480360381019061006491906107a2565b6100dc565b005b34801561007757600080fd5b5061008061021e565b60405161008d9190610824565b60405180910390f35b3480156100a257600080fd5b506100bd60048036038101906100b8919061086b565b610244565b005b3480156100cb57600080fd5b506100d46102f0565b6040516100e19190610824565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610176576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016d9061090a565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f3b4a40cccf2058c593542587329dd385be4f0b588db5471fbd9598e56dd7093a816040516101e39190610824565b60405180910390a150565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461029e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102959061090a565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103468261031b565b9050919050565b6103568161033b565b811461036157600080fd5b50565b6000813590506103738161034d565b92915050565b6000819050919050565b61038c81610379565b811461039757600080fd5b50565b6000813590506103a981610383565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126103d4576103d36103af565b5b8235905067ffffffffffffffff8111156103f1576103f06103b4565b5b60208301915083602082028301111561040d5761040c6103b9565b5b9250929050565b6000806000806060858703121561042e5761042d610311565b5b600061043c87828801610364565b945050602061044d8782880161039a565b935050604085013567ffffffffffffffff81111561046e5761046d610316565b5b61047a878288016103be565b925092505092959194509250565b60008115159050919050565b61049d81610488565b82525050565b60006020820190506104b86000830184610494565b92915050565b6104c78161033b565b82525050565b60006020820190506104e260008301846104be565b92915050565b6104f181610379565b82525050565b600060208201905061050c60008301846104e8565b92915050565b6000806040838503121561052957610528610311565b5b600061053785828601610364565b92505060206105488582860161039a565b9150509250929050565b600082825260208201905092915050565b7f4f6e6c79206f776e657200000000000000000000000000000000000000000000600082015250565b6000610599600a83610552565b91506105a482610563565b602082019050919050565b600060208201905081810360008301526105c88161058c565b9050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106095780820151818401526020810190506105ee565b60008484015250505050565b6000601f19601f8301169050919050565b6000610631826105cf565b61063b81856105da565b935061064b8185602086016105eb565b61065481610615565b840191505092915050565b600060208201905081810360008301526106798184610626565b905092915050565b600080fd5b60008083601f84011261069c5761069b6103af565b5b8235905067ffffffffffffffff8111156106b9576106b86103b4565b5b6020830191508360208202830111156106d5576106d46103b9565b5b9250929050565b600080602083850312156106f3576106f2610311565b5b600083013567ffffffffffffffff81111561071157610710610316565b5b61071d85828601610686565b92509250509250929050565b61073281610488565b811461073d57600080fd5b50565b60008135905061074f81610729565b92915050565b60006020828403121561076b5761076a610311565b5b600061077984828501610740565b91505092915050565b6000819050919050565b61079581610782565b82525050565b6000819050919050565b6000602082840312156107ba576107b9610311565b5b60006107c884828501610364565b91505092915050565b600081519050919050565b60006107e7826107d1565b6107f18185610552565b93506108018185602086016105eb565b61080a81610615565b840191505092915050565b61081e81610782565b82525050565b6000602082019050818103600083015261083e81846107dc565b905092915050565b60006020828403121561085c5761085b610311565b5b600061086a8482850161039a565b91505092915050565b60006020828403121561088957610888610315565b5b600061089784828501610364565b91505092915050565b7f4e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b60006108d6600983610552565b91506108e1826108a0565b602082019050919050565b60006020820190508181036000830152610905816108c9565b905091905056fea2646970667358221220c8b1d8a0f8c7d8f8c8b1d8a0f8c7d8f8c8b1d8a0f8c7d8f8c8b1d8a0f8c7d8f8c64736f6c63430008130033",
    wallet
  );

  console.log('üöÄ –î–µ–ø–ª–æ–∏–º Marketplace –≤ –ª–æ–∫–∞–ª—å–Ω—É—é —Å–µ—Ç—å...');
  const contract = await factory.deploy(PAYMENT_TOKEN);
  
  console.log('‚è≥ –û–∂–∏–¥–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è...');
  const deployment = await contract.waitForDeployment();
  
  const address = await contract.getAddress();
  console.log('‚úÖ Marketplace —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç –ø–æ –∞–¥—Ä–µ—Å—É:', address);
  console.log('üí∞ Payment Token:', PAYMENT_TOKEN);
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–¥—Ä–µ—Å –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
  const fs = require('fs');
  fs.writeFileSync('./marketplace-address.txt', address);
  console.log('üìÅ –ê–¥—Ä–µ—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ marketplace-address.txt');
  console.log('üåê –¢–µ–ø–µ—Ä—å –æ–±–Ω–æ–≤–∏—Ç–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —Å —ç—Ç–∏–º –∞–¥—Ä–µ—Å–æ–º!');
}

main().catch(console.error);
